"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunknotion_clone"] = self["webpackChunknotion_clone"] || []).push([["view_doc_js"],{

/***/ "./view/doc.js":
/*!*********************!*\
  !*** ./view/doc.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"todo\": () => (/* binding */ todo)\n/* harmony export */ });\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/firestore */ \"./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n\r\nconst DB  = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getFirestore)();\r\nconst TODO = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(DB, \"NotionFeed\");\r\n\r\nclass todo {\r\n    todoArray = [];\r\n    constructor() {\r\n        this.todoArray = [];\r\n        (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDoc)(TODO).then((doc) => {\r\n            this.todoArray.push(doc.data());\r\n            console.log('done loading ')\r\n        }).then(() => {\r\n            this.displayTodo()        \r\n        })\r\n\r\n        const INPUT = document.getElementById(\"INPUT\");\r\n        INPUT.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            let value = INPUT.value.value;\r\n            let type = INPUT.choise.value || \"link\";\r\n            this.addTodo(value,type);\r\n            INPUT.reset();\r\n            console.log('input successfull')\r\n        })\r\n    }\r\n    addTodo(value,type) {\r\n        let X = {type: type, text: value, done: false, timeStamp: Date.now()}\r\n        \r\n        ;(0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)(TODO,X)\r\n        .then((docRef) => {\r\n            console.log(\"Document written with ID: \", docRef.id);\r\n            X.ID = docRef.id;\r\n            this.todoArray.push(X);\r\n        }).catch((error) => {\r\n            console.error(\"Error adding document: \", error);\r\n        })\r\n    }\r\n    displayTodo() {\r\n        let container = document.getElementById(\"container\");\r\n        container.innerHTML = \"\";\r\n        this.todoArray.forEach((data) => {\r\n            container.innerHTML += this.TempleteTodo(data);\r\n        })\r\n    }\r\n    TempleteTodo(data){\r\n        if (data.type == \"todo\"){\r\n            let btnstyle = data.done ? \"bi-check-square-fill\" : \"bi-square\";\r\n            let text = data.done ? \"text-decoration-line-through text-black-50\" : \"\";\r\n            return \r\n            `<div id=\"${data.ID}\" class=\"shadow-lg bg-white p-3 d-flex gap-2 align-items-center\">\r\n                <button class=\"btn\" onclick=\"todo.deleteTodo(${data.id})\"><i class=\"bi ${btnstyle} onpageI\"></i></button>\r\n                <h6 class=${text}>${data.text}</h6>\r\n            </div>`\r\n        }\r\n        else if (data.type == \"link\"){\r\n            return \r\n            `<div class=\"shadow-lg bg-white p-3\">\r\n                <div class=\"d-flex align-items-center justify-content-between\">\r\n                    <code>${data.text}</code>\r\n                    <button class=\"btn\" onclick=\"copytext(${data.text})\"><i class=\"bi bi-clipboard onpageI\"></i></button>\r\n                </div>\r\n            </div>`\r\n        }\r\n        else if (data.type == \"note\"){\r\n            let textArray = data.text.split(/\\r?\\n/);\r\n            let header = textArray[0];\r\n            let paragraph = \"\".join(textArray.slice(1))\r\n            return \r\n            `<div class=\"shadow-lg bg-white p-3\">\r\n                <div class=\"d-flex align-items-center justify-content-between\">\r\n                    <h6>${header}</h6>\r\n                    <button class=\"btn\" onclick=\"copytext(${data.text})\"><i class=\"bi bi-clipboard onpageI\"></i></button>\r\n                </div>\r\n                <code>${paragraph}</code>\r\n            </div>`\r\n        }\r\n    }\r\n    static deleteTodo(ID) {\r\n        let docRef = doc(DB, TODO, ID)\r\n        updateDoc(docRef, {\r\n          done: true\r\n        })\r\n        .then(() => {\r\n            console.log(\"Document successfully updated!\");\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error updating document: \", error);\r\n        })\r\n    }\r\n    static copytext(text) {\r\n         navigator.clipboard.writeText(text);\r\n    }\r\n    \r\n}\n\n//# sourceURL=webpack://notion-clone/./view/doc.js?");

/***/ })

}]);